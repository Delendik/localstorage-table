{"version":3,"sources":["data/data.js","components/NewRow.jsx","components/Table.jsx","components/AddRow.jsx","components/App.jsx","index.js"],"names":["data","id","name","type","color","NewRow","r","g","b","draggable","onDragStart","onDragLeave","onDragOver","onDrop","newColor","slice","split","Number","toString","length","toUpperCase","useState","currentName","setCurrentName","currentType","setCurrentType","currentColor","setCurrentColor","className","onChange","e","target","value","localStorage","getItem","row","JSON","parse","window","setItem","stringify","onClick","removeItem","location","reload","Table","field","setField","toggleSort","setToggleSort","currentRow","setCurrentRow","i","key","push","sort","a","sortByField","dataForDisplay","reverse","console","log","map","dragStartHandler","style","background","dragLeavetHandler","preventDefault","dragOverHandler","tempRowTo","Object","assign","tempRowFrom","dropHandler","AddRow","show","setShow","handleClick","arr","random","Math","floor","includes","findID","keys","onSubmit","placeholder","App","chackData","storage","x","storageAvailable","forEach","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fe900f6.chunk.js","sourcesContent":["const data = [\r\n  { \r\n    id: \"1\",\r\n    name: \"name1\",\r\n    type: \"type1\",\r\n    color: \"#0000ff\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"name2\",\r\n    type: \"type2\",\r\n    color: \"#cd7f32\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"name3\",\r\n    type: \"type3\",\r\n    color: \"#c18f8f\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"name4\",\r\n    type: \"type4\",\r\n    color: \"rgb(155, 100, 235)\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"name5\",\r\n    type: \"type5\",\r\n    color: \"#a5a5a5\",\r\n  },\r\n];\r\n\r\nexport default data;","import '../blocks/NewRow.css';\r\nimport { useState } from 'react';\r\n\r\nfunction NewRow({id, name, type, color, draggable, onDragStart, onDragLeave, onDragOver, onDrop}) {\r\n  let newColor = \"\";\r\n  function rgbToHex (r, g, b){ \r\n    r = r.toString(16);\r\n    g = g.toString(16);\r\n    b = b.toString(16);\r\n    if (r.length === 1) r = '0' + r;\r\n    if (g.length === 1) g = '0' + g;\r\n    if (b.length === 1) b = '0' + b;\r\n    return \"#\"+(r + g + b).toUpperCase();\r\n  }\r\n\r\n  if(color[0]!==\"#\"){\r\n    color = color.slice(4, -1).split(\",\")\r\n    newColor = rgbToHex (Number(color[0]), Number(color[1]), Number(color[2]))\r\n  }else{\r\n    newColor = color;\r\n  }\r\n\r\n  const [currentName, setCurrentName] = useState(name);\r\n  const [currentType, setCurrentType] = useState(type);\r\n  const [currentColor, setCurrentColor] = useState(newColor);\r\n\r\n  function changeName(e) {\r\n    setCurrentName(e.target.value);\r\n    let data = localStorage.getItem(id)\r\n    if (data != null) {\r\n      let row= JSON.parse(data);\r\n      row.name = e.target.value;\r\n      window.localStorage.setItem(id, JSON.stringify(row));\r\n    } \r\n  }\r\n  \r\n  function changeType(e) {\r\n    setCurrentType(e.target.value);\r\n    let data = localStorage.getItem(id);\r\n    if (data != null) {\r\n      let row= JSON.parse(data);\r\n      row.type = e.target.value;\r\n      window.localStorage.setItem(id, JSON.stringify(row));\r\n    } \r\n  }\r\n\r\n  function changeColor(e) {\r\n    setCurrentColor(e.target.value);\r\n    let data = localStorage.getItem(id);\r\n    if (data != null) {\r\n      let row= JSON.parse(data);\r\n      row.color = e.target.value;\r\n      window.localStorage.setItem(id, JSON.stringify(row));\r\n    } \r\n  }\r\n\r\n  function deleteRow(){\r\n    window.localStorage.removeItem(id);\r\n    window.location.reload();\r\n  }\r\n  \r\n  return(\r\n    <tr \r\n      className=\"cell__container\" \r\n      draggable={draggable}\r\n      onDragStart={onDragStart}\r\n      onDragLeave={onDragLeave}\r\n      onDragOver={onDragOver}\r\n      onDrop={onDrop}\r\n    >\r\n      <td><input className=\"cell\" type=\"text\" onChange={changeName} value={currentName}></input></td>\r\n      <td><input className=\"cell\" type=\"text\" onChange={changeType} value={currentType}></input></td>\r\n      <td><input className=\"cell\" type=\"color\" onChange={changeColor} value={currentColor}></input></td>\r\n      <td ><button className=\"cell cell__button\" onClick={deleteRow}>Delete</button></td>\r\n      <td><p className=\"cell\">Change my position</p></td>\r\n    </tr>\r\n  )\r\n  \r\n}\r\n\r\nexport default NewRow;","import '../blocks/Table.css';\r\nimport NewRow from './NewRow';\r\nimport { useState } from 'react';\r\n\r\nfunction Table() {\r\n  const [field, setField] = useState('')\r\n  const [toggleSort, setToggleSort] = useState(true);\r\n  const [currentRow, setCurrentRow] = useState(null);\r\n\r\n  var data = [];\r\n  for(let i=0; i<localStorage.length; i++) {\r\n    let key = localStorage.key(i);\r\n    data.push(JSON.parse(localStorage.getItem(key)));\r\n  }\r\n\r\n  const handleClickName = () => {\r\n    setField('name');\r\n    setToggleSort(!toggleSort)\r\n  };\r\n\r\n  const handleClickType = () => {\r\n    setField('type');\r\n    setToggleSort(!toggleSort)\r\n  };\r\n\r\n  const handleClickColor = () => {\r\n    setField('color');\r\n    setToggleSort(!toggleSort)\r\n  };\r\n\r\n  function sortByField(field) {\r\n    if(toggleSort){\r\n      return (a, b) => a[field] > b[field] ? 1 : -1;\r\n    }\r\n    return (a, b) => a[field] > b[field] ? -1 : 1;\r\n  };\r\n\r\n  data.sort(sortByField(field));\r\n  let dataForDisplay=data.reverse();\r\n\r\n  function dragStartHandler(e, data) {\r\n    setCurrentRow(data)\r\n  }\r\n\r\n  function dragLeavetHandler(e) {\r\n    e.target.style.background = 'lightblue'\r\n  }\r\n\r\n  function dragOverHandler(e) {\r\n    e.preventDefault();\r\n    e.target.style.background = '#4895ad'\r\n  }\r\n\r\n  function dropHandler(e, data) {\r\n    e.preventDefault();\r\n    e.target.style.background = 'lightblue'\r\n    if(currentRow.id!==data.id){\r\n      let tempRowTo = Object.assign({}, data);\r\n      let tempRowFrom = Object.assign({}, currentRow);\r\n      data.id = tempRowFrom.id;\r\n      currentRow.id = tempRowTo.id;\r\n      localStorage.setItem(data.id, JSON.stringify(data))\r\n      localStorage.setItem(currentRow.id, JSON.stringify(currentRow))\r\n      window.location.reload();\r\n    }\r\n  }\r\n  console.log(data.length)\r\n  if(data.length===0){\r\n    return(\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Color</th>\r\n            <th>Delete Button</th>\r\n            <th>Change position</th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n    )\r\n  } else{\r\n    return(\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name<button className=\"table__sort-button\" onClick={handleClickName}>sort</button></th>\r\n            <th>Type<button className=\"table__sort-button\" onClick={handleClickType}>sort</button></th>\r\n            <th>Color<button className=\"table__sort-button\" onClick={handleClickColor}>sort</button></th>\r\n            <th>Delete Button</th>\r\n            <th>Change position</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            dataForDisplay.map(data=>\r\n              <NewRow \r\n                key={`${data.id}`} \r\n                {...data} \r\n                draggable={true}\r\n                onDragStart={(e)=> dragStartHandler(e, data)}\r\n                onDragLeave={(e)=> dragLeavetHandler(e)}\r\n                onDragOver={(e)=> dragOverHandler(e)}\r\n                onDrop={(e)=> dropHandler(e, data)}\r\n              />)\r\n          }\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n  \r\n};\r\n\r\nexport default Table;","import '../blocks/AddRow.css';\r\nimport { useState } from 'react';\r\n\r\nfunction AddRow() {\r\n  const [show, setShow] = useState(false)\r\n  const [currentName, setCurrentName] = useState(\"\");\r\n  const [currentType, setCurrentType] = useState(\"\");\r\n  const [currentColor, setCurrentColor] = useState(\"\");\r\n\r\n  function findID(arr){\r\n    var random;\r\n    do {\r\n        random = Math.floor(Math.random() * 1000);\r\n    } while (arr.includes(random.toString()))\r\n    return random;\r\n  }\r\n  function handleClick() {\r\n    setShow(!show);\r\n    if(show){\r\n      let id = findID(Object.keys(localStorage));\r\n      let row = {};\r\n      row.id = id;\r\n      row.name = currentName;\r\n      row.type = currentType;\r\n      row.color = currentColor;\r\n      // var stored = JSON.parse(localStorage);\r\n      // console.log(stored)\r\n      window.localStorage.setItem(id, JSON.stringify(row));\r\n      window.location.reload();\r\n    } \r\n    setCurrentName(\"\");\r\n    setCurrentType(\"\");\r\n    setCurrentColor(\"#a3e6db\");\r\n  }\r\n\r\n  function changeName(e) {\r\n    setCurrentName(e.target.value);\r\n  }\r\n\r\n  function changeType(e) {\r\n    setCurrentType(e.target.value);\r\n  }\r\n\r\n  function changeColor(e) {\r\n    setCurrentColor(e.target.value);\r\n  }\r\n\r\n  if(show){\r\n    return(\r\n  \r\n        <form className=\"add-row\" onSubmit={handleClick}>\r\n          <div className=\"add-row__title\">\r\n            <p className=\"add-row__cell\">Input Name</p>\r\n            <p className=\"add-row__cell\">Input Type</p>\r\n            <p className=\"add-row__cell\">Input Color</p>\r\n          </div>\r\n          <div>\r\n            <input className=\"add-row__cell\" type=\"text\" onChange={changeName} value={currentName} placeholder=\"input name\"></input>\r\n            <input className=\"add-row__cell\" type=\"text\" onChange={changeType} value={currentType} placeholder=\"input type\"></input>\r\n            <input className=\"add-row__cell\" type=\"color\" onChange={changeColor} value={currentColor} placeholder=\"input color\"></input>\r\n          </div>\r\n          <button className=\"add-row__button\" onClick={handleClick}>Add</button>\r\n        </form>\r\n\r\n    )\r\n  }else{\r\n    return(\r\n      <div className=\"add-row\">\r\n        <button className=\"add-row__button\" onClick={handleClick}>Add Row</button>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default AddRow;","import '../blocks/App.css';\nimport data from '../data/data';\nimport Table from './Table';\nimport AddRow from './AddRow';\n\nfunction App() {\n  let chackData = localStorage.length;\n  \n  function storageAvailable(type) {\n    try {\n      var storage = window[type],\n        x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n      return true;\n    }\n    catch(e) {\n      return false;\n    }\n  }\n\n  if (!storageAvailable('localStorage')) {\n    if (chackData === 0) {\n      data.forEach(item=> localStorage.setItem(item.id, JSON.stringify(item)));\n    };\n  }\n\n  return (\n    <div>\n      <AddRow />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}