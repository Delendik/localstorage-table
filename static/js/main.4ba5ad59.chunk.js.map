{"version":3,"sources":["data/data.js","components/NewRow.jsx","components/Table.jsx","components/AddRow.jsx","components/App.jsx","index.js"],"names":["data","id","name","type","color","NewRow","r","g","b","newColor","toString","length","toUpperCase","useState","currentName","setCurrentName","currentType","setCurrentType","currentColor","setCurrentColor","className","onChange","e","target","value","localStorage","getItem","row","JSON","parse","window","setItem","stringify","onClick","removeItem","location","reload","Table","field","setField","toggleSort","setToggleSort","i","key","push","sort","a","sortByField","dataForDisplay","reverse","map","AddRow","show","setShow","handleClick","arr","random","Math","floor","includes","findID","Object","keys","onSubmit","placeholder","App","forEach","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ba5ad59.chunk.js","sourcesContent":["const data = [\r\n  { \r\n    id: \"1\",\r\n    name: \"name1\",\r\n    type: \"type1\",\r\n    color: \"#0000ff\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"name2\",\r\n    type: \"type2\",\r\n    color: \"#cd7f32\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"name3\",\r\n    type: \"type3\",\r\n    color: \"#c18f8f\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"name4\",\r\n    type: \"type4\",\r\n    color: \"rgb(255, 0, 255)\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"name5\",\r\n    type: \"type5\",\r\n    color: \"#a5a5a5\",\r\n  },\r\n];\r\n\r\nexport default data;","import '../blocks/NewRow.css';\r\nimport { useState } from 'react';\r\n\r\nfunction NewRow({id, name, type, color}) {\r\n  let newColor = \"\";\r\n  function rgbToHex (r, g, b){ \r\n    r = r.toString(16);\r\n    g = g.toString(16);\r\n    b = b.toString(16);\r\n    if (r.length === 1) r = '0' + r;\r\n    if (g.length === 1) g = '0' + g;\r\n    if (b.length === 1) b = '0' + b;\r\n    return \"#\"+(r + g + b).toUpperCase();\r\n  }\r\n\r\n  if(color[0]!==\"#\"){\r\n    newColor = rgbToHex (255, 0, 255);\r\n  }else{\r\n    newColor = color;\r\n  }\r\n\r\n  const [currentName, setCurrentName] = useState(name);\r\n  const [currentType, setCurrentType] = useState(type);\r\n  const [currentColor, setCurrentColor] = useState(newColor);\r\n\r\n  function changeName(e) {\r\n    setCurrentName(e.target.value);\r\n    let data = localStorage.getItem(id)\r\n    if (data != null) {\r\n      let row= JSON.parse(data);\r\n      row.name = e.target.value;\r\n      window.localStorage.setItem(id, JSON.stringify(row));\r\n    } \r\n  }\r\n  \r\n  function changeType(e) {\r\n    setCurrentType(e.target.value);\r\n    let data = localStorage.getItem(id)\r\n    if (data != null) {\r\n      let row= JSON.parse(data);\r\n      row.type = e.target.value;\r\n      window.localStorage.setItem(id, JSON.stringify(row));\r\n    } \r\n  }\r\n\r\n  function changeColor(e) {\r\n    setCurrentColor(e.target.value);\r\n    let data = localStorage.getItem(id)\r\n    if (data != null) {\r\n      let row= JSON.parse(data);\r\n      row.color = e.target.value;\r\n      window.localStorage.setItem(id, JSON.stringify(row));\r\n    } \r\n  }\r\n\r\n  function deleteRow(){\r\n    window.localStorage.removeItem(id);\r\n    window.location.reload();\r\n  }\r\n  \r\n  return(\r\n    <tr>\r\n      <td><input className=\"cell\" type=\"text\" onChange={changeName} value={currentName}></input></td>\r\n      <td><input className=\"cell\" type=\"text\" onChange={changeType} value={currentType}></input></td>\r\n      <td><input className=\"cell\" type=\"color\" onChange={changeColor} value={currentColor}></input></td>\r\n      <td className=\"cell\"><button className=\"cell__button\" onClick={deleteRow}>Delete</button></td>\r\n    </tr>\r\n  )\r\n  \r\n}\r\n\r\nexport default NewRow;","import '../blocks/Table.css';\r\nimport NewRow from './NewRow';\r\nimport { useState } from 'react';\r\n\r\nfunction Table() {\r\n  const [field, setField] = useState('')\r\n  const [toggleSort, setToggleSort] = useState(true);\r\n\r\n  var data = [];\r\n  for(let i=0; i<localStorage.length; i++) {\r\n    let key = localStorage.key(i);\r\n    data.push(JSON.parse(localStorage.getItem(key)));\r\n  }\r\n\r\n  const handleClickName = () => {\r\n    setField('name');\r\n    setToggleSort(!toggleSort)\r\n  };\r\n\r\n  const handleClickType = () => {\r\n    setField('type');\r\n    setToggleSort(!toggleSort)\r\n  };\r\n\r\n  const handleClickColor = () => {\r\n    setField('color');\r\n    setToggleSort(!toggleSort)\r\n  };\r\n\r\n  function sortByField(field) {\r\n    if(toggleSort){\r\n      return (a, b) => a[field] > b[field] ? 1 : -1;\r\n    }\r\n    return (a, b) => a[field] > b[field] ? -1 : 1;\r\n  };\r\n\r\n  data.sort(sortByField(field));\r\n  let dataForDisplay=data.reverse();\r\n\r\n  return(\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name<button className=\"table__sort-button\" onClick={handleClickName}>sort</button></th>\r\n          <th>Type<button className=\"table__sort-button\" onClick={handleClickType}>sort</button></th>\r\n          <th>Color<button className=\"table__sort-button\" onClick={handleClickColor}>sort</button></th>\r\n          <th>Delete Button</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          dataForDisplay.map(data=><NewRow key={`${data.id}`} {...data} />)\r\n        }\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;","import '../blocks/AddRow.css';\r\nimport { useState } from 'react';\r\n\r\nfunction AddRow() {\r\n  const [show, setShow] = useState(false)\r\n  const [currentName, setCurrentName] = useState(\"\");\r\n  const [currentType, setCurrentType] = useState(\"\");\r\n  const [currentColor, setCurrentColor] = useState(\"\");\r\n\r\n  function findID(arr){\r\n    var random;\r\n    do {\r\n        random = Math.floor(Math.random() * 1000);\r\n    } while (arr.includes(random.toString()))\r\n    return random;\r\n  }\r\n  function handleClick() {\r\n    setShow(!show);\r\n    if(show){\r\n      let id = findID(Object.keys(localStorage));\r\n      let row = {};\r\n      row.id = id;\r\n      row.name = currentName;\r\n      row.type = currentType;\r\n      row.color = currentColor;\r\n      window.localStorage.setItem(id, JSON.stringify(row));\r\n      window.location.reload();\r\n    } \r\n    setCurrentName(\"\");\r\n    setCurrentType(\"\");\r\n    setCurrentColor(\"#a3e6db\");\r\n  }\r\n\r\n  function changeName(e) {\r\n    setCurrentName(e.target.value);\r\n  }\r\n\r\n  function changeType(e) {\r\n    setCurrentType(e.target.value);\r\n  }\r\n\r\n  function changeColor(e) {\r\n    setCurrentColor(e.target.value);\r\n  }\r\n\r\n  if(show){\r\n    return(\r\n  \r\n        <form className=\"add-row\" onSubmit={handleClick}>\r\n          <div className=\"add-row__title\">\r\n            <p className=\"add-row__cell\">Input Name</p>\r\n            <p className=\"add-row__cell\">Input Type</p>\r\n            <p className=\"add-row__cell\">Input Color</p>\r\n          </div>\r\n          <div>\r\n            <input className=\"add-row__cell\" type=\"text\" onChange={changeName} value={currentName} placeholder=\"input name\"></input>\r\n            <input className=\"add-row__cell\" type=\"text\" onChange={changeType} value={currentType} placeholder=\"input type\"></input>\r\n            <input className=\"add-row__cell\" type=\"color\" onChange={changeColor} value={currentColor} placeholder=\"input color\"></input>\r\n          </div>\r\n          <button className=\"add-row__button\" onClick={handleClick}>Add</button>\r\n        </form>\r\n\r\n    )\r\n  }else{\r\n    return(\r\n      <div className=\"add-row\">\r\n        <button className=\"add-row__button\" onClick={handleClick}>Add Row</button>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default AddRow;","import '../blocks/App.css';\nimport data from '../data/data';\nimport Table from './Table';\nimport AddRow from './AddRow';\n\nfunction App() {\n  let chackData = localStorage.getItem(data[0].id);\n  \n  if (chackData === null) {\n    data.forEach(item=> localStorage.setItem(item.id, JSON.stringify(item)));\n  };\n\n  return (\n    <div>\n      <AddRow />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}